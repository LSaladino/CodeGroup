// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PP.Data.Context;

#nullable disable

namespace PP.Data.Migrations
{
    [DbContext(typeof(MyDataContext))]
    [Migration("20230810223757_Migra01")]
    partial class Migra01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PP.Core.Domain.Membro", b =>
                {
                    b.Property<int>("ProjetoId")
                        .HasColumnType("integer")
                        .HasColumnName("idprojeto");

                    b.Property<int>("PessoaId")
                        .HasColumnType("integer")
                        .HasColumnName("idpessoa");

                    b.HasKey("ProjetoId")
                        .HasName("pk_membros_projeto");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("membros", (string)null);
                });

            modelBuilder.Entity("PP.Core.Domain.Pessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PessoaId"));

                    b.Property<string>("CPF")
                        .HasColumnType("text")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datanascimento");

                    b.Property<bool>("IsFuncionario")
                        .HasColumnType("boolean")
                        .HasColumnName("funcionario");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("PessoaId")
                        .HasName("pk_pessoa");

                    b.ToTable("pessoa", (string)null);
                });

            modelBuilder.Entity("PP.Core.Domain.Projeto", b =>
                {
                    b.Property<int>("ProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProjetoId"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_fim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inicio");

                    b.Property<DateTime>("DataPrevisaoFim")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_previsao_fim");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<double>("Orcamento")
                        .HasColumnType("double precision")
                        .HasColumnName("orcamento");

                    b.Property<int>("PessoaId")
                        .HasColumnType("integer")
                        .HasColumnName("idgerente");

                    b.Property<string>("Risco")
                        .HasColumnType("text")
                        .HasColumnName("risco");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("ProjetoId")
                        .HasName("pk_projeto");

                    b.HasIndex("PessoaId");

                    b.ToTable("projeto", (string)null);
                });

            modelBuilder.Entity("PP.Core.Domain.Membro", b =>
                {
                    b.HasOne("PP.Core.Domain.Pessoa", "Pessoa")
                        .WithOne("Membro")
                        .HasForeignKey("PP.Core.Domain.Membro", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PP.Core.Domain.Projeto", "Projeto")
                        .WithOne("Membro")
                        .HasForeignKey("PP.Core.Domain.Membro", "ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("PP.Core.Domain.Projeto", b =>
                {
                    b.HasOne("PP.Core.Domain.Pessoa", "Pessoa")
                        .WithMany("Projetos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_gerente");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("PP.Core.Domain.Pessoa", b =>
                {
                    b.Navigation("Membro");

                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("PP.Core.Domain.Projeto", b =>
                {
                    b.Navigation("Membro");
                });
#pragma warning restore 612, 618
        }
    }
}
